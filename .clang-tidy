---

Checks:  clang-analyzer-*,
         readability-*,
        -readability-identifier-length,
        -readability-math-missing-parentheses,
        -readability-uppercase-literal-suffix,
        -readability-avoid-unconditional-preprocessor-if,
        -readability-magic-numbers,
        -readability-isolate-declaration,
        -readability-implicit-bool-conversion,
        -readability-use-std-min-max,
        -readability-function-cognitive-complexity,
         modernize-*,
        -modernize-use-trailing-return-type,
        -modernize-avoid-c-arrays,
         cppcoreguidelines-*,
        -cppcoreguidelines-avoid-magic-numbers,
        -cppcoreguidelines-avoid-c-arrays,
        -cppcoreguidelines-avoid-const-or-ref-data-members,
        -cppcoreguidelines-pro-type-const-cast,
        -cppcoreguidelines-pro-bounds-constant-array-index,
        -cppcoreguidelines-pro-bounds-pointer-arithmetic,
        -cppcoreguidelines-pro-bounds-array-to-pointer-decay,
        -cppcoreguidelines-pro-type-reinterpret-cast,
         performance-*,
         misc-*,
        -misc-include-cleaner,
        -misc-non-private-member-variables-in-classes,
         concurrency-*,
         bugprone-*,
        -bugprone-easily-swappable-parameters


CheckOptions:
  - { key: readability-identifier-naming.ClassCase,                value: CamelCase }
  - { key: readability-identifier-naming.ClassConstantCase,        value: CamelCase } # in class constant
  - { key: readability-identifier-naming.ClassConstantPrefix,      value: k }
  - { key: readability-identifier-naming.EnumCase,                 value: CamelCase }
  - { key: readability-identifier-naming.EnumConstantCase,         value: CamelCase }
  - { key: readability-identifier-naming.EnumConstantPrefix,       value: k }
  - { key: readability-identifier-naming.NamespaceCase,            value: camelBack }
  - { key: readability-identifier-naming.ParameterCase,            value: camelBack }
  - { key: readability-identifier-naming.VariableCase,             value: camelBack }
  - { key: readability-identifier-naming.ConstantCase,             value: camelBack } # default for all constant ?
  - { key: readability-identifier-naming.GlobalConstantCase,       value: CamelCase } # global constant
  - { key: readability-identifier-naming.GlobalConstantPrefix,     value: k }
  - { key: readability-identifier-naming.StaticConstantCase,       value: CamelCase } # local constant
  - { key: readability-identifier-naming.StaticConstantPrefix,     value: k }
  - { key: readability-identifier-naming.ProtectedMemberPrefix,    value: m }
  - { key: readability-identifier-naming.PrivateMemberPrefix,      value: m }
  - { key: readability-identifier-naming.ScopedEnumConstantCase,   value: CamelCase } # override EnumConstantCase
  - { key: readability-identifier-naming.ScopedEnumConstantPrefix, value: '' }        # override EnumConstantPrefix

  - key: cppcoreguidelines-avoid-non-const-global-variables.AllowInternalLinkage      # this option is available since clang-tidy 19
    value: true

UseColor: true
FormatStyle: 'file'
WarningsAsErrors: ""
HeaderFilterRegex: '.*'
